# -*- coding: utf-8 -*-
"""DSA test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HNZy5qvH7uM4q1U8cDCjBNJAhI2DOGby
"""

import numpy as np

def connected_sinks(file_path):
    np.set_printoptions(threshold=np.inf)  # Ensure large arrays are fully printed
    with open(file_path, "r", encoding="utf-8") as file:
        rows = file.read().strip().split("\n")

    rmax = cmax = 0
    grid = []
    table = {
        "═": "lr",
        "║": "ud",
        "╔": "rd",
        "╗": "ld",
        "╚": "ur",
        "╝": "lu",
        "╠": "urd",
        "╣": "lud",
        "╦": "lrd",
        "╩": "lur",
    }

    dir_table = {
        'u': (-1, 0),
        'd': (1, 0),
        'l': (0, -1),
        'r': (0, 1)
    }
    connect = {
        'u': 'd',
        'd': 'u',
        'l': 'r',
        'r': 'l'
    }

    for r in rows:
        cv = int(r.split()[1])
        rv = int(r.split()[2])
        rmax = max(rv, rmax)
        cmax = max(cv, cmax)
    rmax += 1
    cmax += 1
    grid = np.full((rmax, cmax), fill_value="x", dtype='object')

    src = None
    for row in rows:
        s, c, r = row.split()
        r, c = rmax - int(r) - 1, int(c)
        if s == '*':
            src = (r, c)
            grid[r, c] = s
        elif s.isalpha():
            grid[r, c] = s
        else:
            grid[r, c] = table[s]

    vis = np.full((rmax, cmax), fill_value=0)  # 0 = Not visited, 1 = visited
    sinks = []

    def dfs(curr):
        u = grid[curr]
        if u == 'x':
            return
        if u == '*' or ('A' <= u <= 'Z'):
            direction = 'ulrd'
        else:
            direction = u
        vis[curr] = 1
        for d in direction:
            go = dir_table[d]
            x, y = curr[0] + go[0], curr[1] + go[1]
            if 0 <= x < rmax and 0 <= y < cmax and vis[x, y] == 0:
                dest = grid[x, y]
                if ('A' <= dest <= 'Z') or (connect[d] in dest):
                    dfs((x, y))
        if 'A' <= u <= 'Z':
            sinks.append(u)

    dfs(src)
    return ''.join(sorted(sinks))

# Example usage:
file_path = "/content/coding_qual_input.txt"
connected_sinks(file_path)

